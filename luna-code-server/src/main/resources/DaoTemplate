package #<daoPackage>;

import java.io.Serializable;
import java.util.List;

import #<modelPackage>.#<modelName>;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.*;
/**
 * #<tableComment>(#<tableName>).
 *
 * @author luna
 * @since #<createTime>
 */
@Mapper
public interface #<daoName>{


    /**
     * 根据id查询
     *
     * @param id
     * @return #<modelName>
     */
    @Select("SELECT  #<fields>  FROM #<tableName> WHERE id = #{id}")
    @Results({
    #<result>})
    #<modelName> get(@Param("id")Long  id);


    @Select({
            "<script>",
            "SELECT  #<fields> ",
            "FROM #<tableName>",
            "WHERE id in",
            "<foreach collection='ids' item='id' open='(' separator=',' close=')'>",
            "#{id}",
            "</foreach>",
            "</script>"
    })
    @Results({
        #<result>})
     #<modelName> getByIds(@Param("ids") List<Long> ids);

    /**
     * 分页查询
     *
     * @param id
     * @return #<modelName>
     */
    @Select("SELECT  #<fields>  FROM #<tableName>  ORDER BY modified_time DESC LIMIT #{offset}, #{rows}")
    @Results({
    #<result>})
    List<#<modelName>> list(@Param("offset") Integer offset, @Param("rows") Integer rows);


    /**
     * 单个插入
     *
     * @param #<modelNameLower> #<modelName>
     * @return
     */
    @Insert("INSERT INTO #<tableName>(#<fields>) "
        + "VALUES (#<insertValues>)")
    @Options(useGeneratedKeys = true, keyProperty = "id", keyColumn = "id")
    int insert(#<modelName> #<modelNameLower>);

    /**
     * 批量插入
     *
     * @param list #<modelName>列表
     */
    @Insert("<script>INSERT INTO #<tableName>(#<fields>) VALUES "
        + "<foreach collection='list' index='index' item='n' separator=','> "
        + "(#<batchInsertValues>)"
        + "</foreach></script>")
    void insertBatch(@Param("list") List<#<modelName>> list);

    /**
     * 更新
     *
     * @param #<modelNameLower>
     */
    @Update("UPDATE #<tableName> SET #<updateValues> WHERE id = #{id}")
    void update(#<modelName>  #<modelNameLower>);

    /**
     * 单个删除
     *
     * @param id id
     */
    @Delete("DELETE FROM #<tableName> WHERE id = #{id}")
    void delete(@Param("id") Long id);

    /**
     * 批量删除
     *
     * @param ids ids
     */
    @Delete("<script>DELETE FROM #<tableName> WHERE id IN "
        + "<foreach collection='ids' index='index' item='id' open='(' separator=',' close=')'>"
        + "#{id}"
        + "</foreach></script>")
    void deleteByIds(@Param("ids") List<Long> ids);

    /**
     * 统计
     *
     * @return 数量
     */
    @Select("SELECT COUNT(*) FROM #<tableName>")
    int count();
}
